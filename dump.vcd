$date
	Thu Feb 27 00:15:00 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test_cpu $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$scope module testee $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 # zero $end
$var wire 1 $ writeReg $end
$var wire 1 % writeMem $end
$var wire 6 & opcode [5:0] $end
$var wire 3 ' op [2:0] $end
$var wire 6 ( funct [5:0] $end
$var wire 1 ) SRL $end
$var wire 1 * SHIFT $end
$var wire 1 + RI $end
$var wire 1 , LW $end
$var wire 1 - JR $end
$var wire 1 . JJRJAL $end
$var wire 1 / JBEQ $end
$var wire 1 0 JAL $end
$scope module control_path $end
$var wire 1 / JBEQ $end
$var wire 1 . JJRJAL $end
$var wire 1 - JR $end
$var wire 1 + RI $end
$var wire 1 * SHIFT $end
$var wire 1 % writeMem $end
$var wire 1 $ writeReg $end
$var wire 1 # zero $end
$var wire 6 1 opcode [5:0] $end
$var wire 6 2 funct [5:0] $end
$var wire 1 3 SW $end
$var wire 1 ) SRL $end
$var wire 1 4 SLL $end
$var wire 1 5 RTYPE $end
$var wire 1 , LW $end
$var wire 1 0 JAL $end
$var wire 1 6 J $end
$var wire 1 7 BNE $end
$var wire 1 8 BEQ $end
$var reg 3 9 op [2:0] $end
$upscope $end
$scope module data_path $end
$var wire 1 0 JAL $end
$var wire 1 / JBEQ $end
$var wire 1 . JJRJAL $end
$var wire 1 - JR $end
$var wire 1 , LW $end
$var wire 1 + RI $end
$var wire 1 * SHIFT $end
$var wire 1 ) SRL $end
$var wire 1 ! clk $end
$var wire 3 : op [2:0] $end
$var wire 1 " rst $end
$var wire 1 % writeMem $end
$var wire 1 $ writeReg $end
$var wire 1 # zero $end
$var wire 32 ; wd [31:0] $end
$var wire 5 < wa [4:0] $end
$var wire 32 = shiftRt [31:0] $end
$var wire 5 > shamt [4:0] $end
$var wire 5 ? rt [4:0] $end
$var wire 5 @ rs [4:0] $end
$var wire 5 A rdR [4:0] $end
$var wire 5 B rdI [4:0] $end
$var wire 32 C rd2 [31:0] $end
$var wire 32 D rd1 [31:0] $end
$var wire 6 E opcode [5:0] $end
$var wire 32 F nextaddr [31:0] $end
$var wire 26 G jaddr [25:0] $end
$var wire 32 H immd32 [31:0] $end
$var wire 16 I immd [15:0] $end
$var wire 6 J funct [5:0] $end
$var wire 32 K data [31:0] $end
$var wire 32 L cmd [31:0] $end
$var wire 32 M c [31:0] $end
$var wire 32 N b [31:0] $end
$var wire 32 O addrRelate [31:0] $end
$var wire 32 P addrDirect [31:0] $end
$var wire 32 Q addrData [31:0] $end
$var wire 32 R addrAdd4 [31:0] $end
$var wire 32 S addr [31:0] $end
$scope module alu $end
$var wire 32 T b [31:0] $end
$var wire 3 U op [2:0] $end
$var wire 1 # zero $end
$var wire 32 V a [31:0] $end
$var reg 32 W c [31:0] $end
$upscope $end
$scope module cmdmem $end
$var wire 32 X cmd [31:0] $end
$var wire 32 Y addr [31:0] $end
$upscope $end
$scope module datamem $end
$var wire 32 Z addr [31:0] $end
$var wire 1 ! clk $end
$var wire 1 % writeMem $end
$var wire 32 [ writeData [31:0] $end
$var wire 32 \ data [31:0] $end
$upscope $end
$scope module pc $end
$var wire 1 ! clk $end
$var wire 32 ] nextaddr [31:0] $end
$var wire 1 " rst $end
$var reg 32 ^ addr [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 1 ! clk $end
$var wire 5 _ ra1 [4:0] $end
$var wire 5 ` ra2 [4:0] $end
$var wire 32 a rd1 [31:0] $end
$var wire 32 b rd2 [31:0] $end
$var wire 1 " rst $end
$var wire 5 c wa [4:0] $end
$var wire 32 d wd [31:0] $end
$var wire 1 $ writeReg $end
$var integer 32 e i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
x8
x7
x6
x5
x4
x3
bx 2
bx 1
x0
x/
x.
x-
x,
x+
x*
x)
bx (
bx '
bx &
x%
x$
x#
1"
0!
$end
#1
b1111111 ;
b1111111 d
bx00000000 K
bx00000000 \
b1111111 Q
b1111111 Z
b100 F
b100 ]
1#
b1111111 M
b1111111 W
1$
b100 O
b1000 <
b1000 c
0*
1+
0/
b0 =
b1111111 N
b1111111 T
0.
0-
b0 '
b0 9
b0 :
b0 U
b1000000000000111111100 P
0)
04
b111111 (
b111111 2
b111111 J
b1111111 H
b1111111 I
b1 >
b0 A
b1000 B
b0 C
b0 [
b0 b
b1000 ?
b1000 `
b10000000000001111111 G
b0 D
b0 V
b0 a
b0 @
b0 _
00
0,
06
0%
03
05
07
08
b1000 &
b1000 1
b1000 E
b100000000010000000000001111111 L
b100000000010000000000001111111 X
b100 R
b0 S
b0 Y
b0 ^
b100000 e
1!
#2
0!
0"
#3
b0 ;
b0 d
b0 K
b0 \
b0 Q
b0 Z
0+
0#
b0 M
b0 W
b0 <
b0 c
1*
b0 N
b0 T
b0 P
b1000 F
b1000 ]
b0 H
b0 I
14
b0 (
b0 2
b0 J
b0 >
b0 G
b0 B
b0 ?
b0 `
15
b0 &
b0 1
b0 E
b1000 O
b0 C
b0 [
b0 b
b0 L
b0 X
b1000 R
b100 S
b100 Y
b100 ^
1!
#4
0!
#5
0*
b10000 <
b10000 c
b10 '
b10 9
b10 :
b10 U
b1000010010100000000010010000 P
b1100 F
b1100 ]
04
b100100 (
b100100 2
b100100 J
b11111111111111111000000000100100 H
b1000000000100100 I
b10000 A
b10010 B
b10010 ?
b10010 `
b10000100101000000000100100 G
b10000 @
b10000 _
b1100 O
b10000100101000000000100100 L
b10000100101000000000100100 X
b1100 R
b1000 S
b1000 Y
b1000 ^
1!
#6
0!
#7
1*
b0 <
b0 c
b0 '
b0 9
b0 :
b0 U
b0 P
b10000 F
b10000 ]
14
b0 (
b0 2
b0 J
b0 H
b0 I
b0 A
b0 B
b0 ?
b0 `
b0 G
b0 @
b0 _
b10000 O
b0 L
b0 X
b10000 R
b1100 S
b1100 Y
b1100 ^
1!
#8
0!
#9
b111111100 ;
b111111100 d
b10000 <
b10000 c
bx K
bx \
b111111100 Q
b111111100 Z
1#
b1111111 M
b1111111 W
b1000100000001000000000 P
b111111100 =
b1111111 N
b1111111 T
b10100 F
b10100 ]
b10 >
b11111111111111111000000010000000 H
b1000000010000000 I
b10000 A
b10001000000010000000 G
b1000 B
b1111111 C
b1111111 [
b1111111 b
b1000 ?
b1000 `
b10100 O
b10001000000010000000 L
b10001000000010000000 X
b10100 R
b10000 S
b10000 Y
b10000 ^
1!
#10
0!
#11
b0 ;
b0 d
b0 <
b0 c
b0 K
b0 \
b0 Q
b0 Z
0#
b0 M
b0 W
b0 P
b0 =
b0 N
b0 T
b11000 F
b11000 ]
b0 >
b0 H
b0 I
b0 A
b0 G
b0 B
b0 C
b0 [
b0 b
b0 ?
b0 `
b11000 O
b0 L
b0 X
b11000 R
b10100 S
b10100 Y
b10100 ^
1!
#12
0!
#13
b10000000 ;
b10000000 d
b10001 <
b10001 c
b1 N
b1 T
bx K
bx \
b10000000 Q
b10000000 Z
1+
0*
b100010001000000000000000100 P
1#
b10000000 M
b10000000 W
b11100 F
b11100 ]
b1 H
b1 I
04
b1 (
b1 2
b1 J
b10001 B
b10001 ?
b10001 `
b1000100010000000000000001 G
b1111111 D
b1111111 V
b1111111 a
b1000 @
b1000 _
05
b1000 &
b1000 1
b1000 E
b11100 O
b100001000100010000000000000001 L
b100001000100010000000000000001 X
b11100 R
b11000 S
b11000 Y
b11000 ^
1!
#14
0!
#15
b0 ;
b0 d
0+
0#
b0 <
b0 c
b0 K
b0 \
b0 Q
b0 Z
1*
b0 N
b0 T
b0 P
b0 M
b0 W
b100000 F
b100000 ]
b0 H
b0 I
14
b0 (
b0 2
b0 J
b0 B
b0 ?
b0 `
b0 G
b0 D
b0 V
b0 a
b0 @
b0 _
15
b0 &
b0 1
b0 E
b100000 O
b0 C
b0 [
b0 b
b0 L
b0 X
b100000 R
b11100 S
b11100 Y
b11100 ^
1!
#16
0!
#17
b100100 F
b100100 ]
b100100 O
b100100 R
b100000 S
b100000 Y
b100000 ^
1!
#18
0!
#19
b101000 F
b101000 ]
b101000 O
b101000 R
b100100 S
b100100 Y
b100100 ^
1!
#20
0!
#21
b101100 F
b101100 ]
b101100 O
b101100 R
b101000 S
b101000 Y
b101000 ^
1!
#22
0!
#23
b110000 F
b110000 ]
b110000 O
b110000 R
b101100 S
b101100 Y
b101100 ^
1!
#24
0!
#25
b110100 F
b110100 ]
b110100 O
b110100 R
b110000 S
b110000 Y
b110000 ^
1!
#26
0!
#27
b111000 F
b111000 ]
b111000 O
b111000 R
b110100 S
b110100 Y
b110100 ^
1!
#28
0!
#29
b111100 F
b111100 ]
b111100 O
b111100 R
b111000 S
b111000 Y
b111000 ^
1!
#30
0!
#31
b1000000 F
b1000000 ]
b1000000 O
b1000000 R
b111100 S
b111100 Y
b111100 ^
1!
#32
0!
#33
b1000100 F
b1000100 ]
b1000100 O
b1000100 R
b1000000 S
b1000000 Y
b1000000 ^
1!
#34
0!
#35
b1001000 F
b1001000 ]
b1001000 O
b1001000 R
b1000100 S
b1000100 Y
b1000100 ^
1!
#36
0!
#37
b1001100 F
b1001100 ]
b1001100 O
b1001100 R
b1001000 S
b1001000 Y
b1001000 ^
1!
#38
0!
#39
b1010000 F
b1010000 ]
b1010000 O
b1010000 R
b1001100 S
b1001100 Y
b1001100 ^
1!
#40
0!
